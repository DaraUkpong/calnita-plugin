enum AgeRange {
  UNDER_18
  BETWEEN_18_AND_24
  BETWEEN_25_AND_34
  BETWEEN_35_AND_44
  BETWEEN_45_AND_54
  BETWEEN_55_AND_64
  ABOVE_64
}

type AuthData {
  accessToken: String!
  refreshToken: String!
}

enum Country {
  AFGHANISTAN
  ALBANIA
  ALGERIA
  ANDORRA
  ANGOLA
  ANTIGUA_AND_BARBUDA
  ARGENTINA
  ARMENIA
  AUSTRALIA
  AUSTRIA
  AZERBAIJAN
  BAHAMAS
  BAHRAIN
  BANGLADESH
  BARBADOS
  BELARUS
  BELGIUM
  BELIZE
  BENIN
  BHUTAN
  BOLIVIA
  BOSNIA_AND_HERZEGOVINA
  BOTSWANA
  BRAZIL
  BRUNEI
  BULGARIA
  BURKINA_FASO
  BURUNDI
  CABO_VERDE
  CAMBODIA
  CAMEROON
  CANADA
  CENTRAL_AFRICAN_REPUBLIC
  CHAD
  CHILE
  CHINA
  COLOMBIA
  COMOROS
  CONGO
  COSTA_RICA
  CROATIA
  CUBA
  CYPRUS
  CZECH_REPUBLIC
  DEMOCRATIC_REPUBLIC_OF_THE_CONGO
  DENMARK
  DJIBOUTI
  DOMINICA
  DOMINICAN_REPUBLIC
  EAST_TIMOR
  ECUADOR
  EGYPT
  EL_SALVADOR
  EQUATORIAL_GUINEA
  ERITREA
  ESTONIA
  ESWATINI
  ETHIOPIA
  FIJI
  FINLAND
  FRANCE
  GABON
  GAMBIA
  GEORGIA
  GERMANY
  GHANA
  GREECE
  GRENADA
  GUATEMALA
  GUINEA
  GUINEA_BISSAU
  GUYANA
  HAITI
  HONDURAS
  HUNGARY
  ICELAND
  INDIA
  INDONESIA
  IRAN
  IRAQ
  IRELAND
  ISRAEL
  ITALY
  IVORY_COAST
  JAMAICA
  JAPAN
  JORDAN
  KAZAKHSTAN
  KENYA
  KIRIBATI
  KOSOVO
  KUWAIT
  KYRGYZSTAN
  LAOS
  LATVIA
  LEBANON
  LESOTHO
  LIBERIA
  LIBYA
  LIECHTENSTEIN
  LITHUANIA
  LUXEMBOURG
  MADAGASCAR
  MALAWI
  MALAYSIA
  MALDIVES
  MALI
  MALTA
  MARSHALL_ISLANDS
  MAURITANIA
  MAURITIUS
  MEXICO
  MICRONESIA
  MOLDOVA
  MONACO
  MONGOLIA
  MONTENEGRO
  MOROCCO
  MOZAMBIQUE
  MYANMAR
  NAMIBIA
  NAURU
  NEPAL
  NETHERLANDS
  NEW_ZEALAND
  NICARAGUA
  NIGER
  NIGERIA
  NORTH_KOREA
  NORTH_MACEDONIA
  NORWAY
  OMAN
  PAKISTAN
  PALAU
  PALESTINE
  PANAMA
  PAPUA_NEW_GUINEA
  PARAGUAY
  PERU
  PHILIPPINES
  POLAND
  PORTUGAL
  QATAR
  ROMANIA
  RUSSIA
  RWANDA
  SAINT_KITTS_AND_NEVIS
  SAINT_LUCIA
  SAINT_VINCENT_AND_THE_GRENADINES
  SAMOA
  SAN_MARINO
  SAO_TOME_AND_PRINCIPE
  SAUDI_ARABIA
  SENEGAL
  SERBIA
  SEYCHELLES
  SIERRA_LEONE
  SINGAPORE
  SLOVAKIA
  SLOVENIA
  SOLOMON_ISLANDS
  SOMALIA
  SOUTH_AFRICA
  SOUTH_KOREA
  SOUTH_SUDAN
  SPAIN
  SRI_LANKA
  SUDAN
  SURINAME
  SWEDEN
  SWITZERLAND
  SYRIA
  TAIWAN
  TAJIKISTAN
  TANZANIA
  THAILAND
  TOGO
  TONGA
  TRINIDAD_AND_TOBAGO
  TUNISIA
  TURKEY
  TURKMENISTAN
  TUVALU
  UGANDA
  UKRAINE
  UNITED_ARAB_EMIRATES
  UNITED_KINGDOM
  UNITED_STATES
  URUGUAY
  UZBEKISTAN
  VANUATU
  VATICAN_CITY
  VENEZUELA
  VIETNAM
  YEMEN
  ZAMBIA
  ZIMBABWE
}

input CreateProductInput {
  name: String!
  category: String!
  price: Float!
  imageUrl: String
  suitableSkinTypes: [String]
  targetedConcerns: [String]
  ingredients: [String]
}

type Fragrance {
  preferredScents: [String]
  perfumeUseFrequency: String
  strengthPreference: String
  allergies: String
}

type HairCare {
  hairType: String
  concerns: [String]
  regularProducts: [String]
  washFrequency: String
  heatStylingTools: [String]
  allergies: String
}

interface IMutationResponse {
  code: Int!
  success: Boolean!
  message: String!
}

type Makeup {
  dailyProducts: [String]
  concerns: [String]
  preferredFinishes: [String]
  allergies: String
}

type Mutation {
  root: String
  updateMe(input: UpdateUserInput!): UserMutationResponse
  userEmailAuth(email: String!, otp: String!): UserMutationResponse
  requestOTP(email: String!): MutationResponse
  userGoogleAuth(googleIdToken: String, googleAuthCode: String): UserMutationResponse
  userRefreshToken(refreshToken: String!): UserMutationResponse
  updateCurrentPartner(input: UpdatePartnerInput!): PartnerMutationResponse
  partnerEmailAuth(email: String!, otp: String!): PartnerMutationResponse
  partnerGoogleAuth(googleIdToken: String, googleAuthCode: String): PartnerMutationResponse
  partnerRefreshToken(refreshToken: String!): PartnerMutationResponse
  updateProduct(id: ID!, input: UpdateProductInput!): ProductMutationResponse
  createProduct(input: CreateProductInput!): ProductMutationResponse
  bulkCreateProducts(inputs: [CreateProductInput!]!): [ProductMutationResponse!]!
  deleteProduct(id: ID!): ProductMutationResponse
}

type MutationResponse implements IMutationResponse {
  code: Int!
  success: Boolean!
  message: String!
}

interface Node {
  id: ID!
}

type Partner implements Node {
  id: ID!
  email: String!
  name: String
  siteUrl: String
  products: [Product]
}

type PartnerMutationResponse implements IMutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  partner: Partner
  authData: AuthData
}

type PersonalInfo {
  age: AgeRange
  gender: String
  country: Country
}

type Product implements Node {
  id: ID!
  name: String!
  category: String!
  price: Float!
  imageUrl: String
  suitableSkinTypes: [String]
  targetedConcerns: [String]
  ingredients: [String]
  creator: Partner
}

type ProductMutationResponse implements IMutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  product: Product
}

type ProductPreferences {
  ingredientsToAvoid: [String]
  preferredNaturalIngredients: [String]
  dietaryRestrictions: [String]
  preferredCategories: [String]
}

type Query {
  root: String
  me: User
  user(id: ID!): User
  currentPartner: Partner
  partner(id: ID!): Partner
  product(id: ID!): Product
  products: [Product!]!
}

type SkinCare {
  skinType: String
  primaryConcerns: [String]
  currentProducts: [String]
  routine: String
  allergies: String
}

input UpdateFragranceInput {
  preferredScents: [String]
  perfumeUseFrequency: String
  strengthPreference: String
  allergies: String
}

input UpdateHairCareInput {
  hairType: String
  concerns: [String]
  regularProducts: [String]
  washFrequency: String
  heatStylingTools: [String]
  allergies: String
}

input UpdateMakeupInput {
  dailyProducts: [String]
  concerns: [String]
  preferredFinishes: [String]
  allergies: String
}

input UpdatePartnerInput {
  name: String
  siteUrl: String
}

input UpdatePersonalInfoInput {
  age: AgeRange
  gender: String
  country: Country
}

input UpdateProductInput {
  name: String
  category: String
  price: Float
  imageUrl: String
  suitableSkinTypes: [String]
  targetedConcerns: [String]
  ingredients: [String]
}

input UpdateProductPreferencesInput {
  ingredientsToAvoid: [String]
  preferredNaturalIngredients: [String]
  dietaryRestrictions: [String]
  preferredCategories: [String]
}

input UpdateSkinCareInput {
  skinType: String
  primaryConcerns: [String]
  currentProducts: [String]
  routine: String
  allergies: String
}

input UpdateUserInput {
  personalInfo: UpdatePersonalInfoInput
  skinCare: UpdateSkinCareInput
  fragrance: UpdateFragranceInput
  makeup: UpdateMakeupInput
  hairCare: UpdateHairCareInput
  productPreferences: UpdateProductPreferencesInput
}

type User implements Node {
  id: ID!
  email: String!
  personalInfo: PersonalInfo
  skinCare: SkinCare
  fragrance: Fragrance
  makeup: Makeup
  hairCare: HairCare
  productPreferences: ProductPreferences
}

type UserMutationResponse implements IMutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  user: User
  authData: AuthData
}